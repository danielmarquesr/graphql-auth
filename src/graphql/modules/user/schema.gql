scalar Date

type User {
  id: ID!
  email: String!
  firstName: String
  lastName: String
  isEmailConfirmed: Boolean!
  createdAt: Date!
  updatedAt: Date!
}

type Token {
  token: String!
}

input TokenSHA256 {
  token: String!
}

input UserInput {
  email: String!
  password: String!
  firstName: String
  lastName: String
}

input AuthInput {
  email: String!
  password: String!
}

type Query {
  Users(cursor: ID, limit: Int): [User!]!
  User(id: ID!): User
  CurrentUser: User
}

type Mutation {
  SignUp(input: UserInput!): User
  SignIn(input: AuthInput!): Token
  ConfirmEmail(input: TokenSHA256!): User
}
